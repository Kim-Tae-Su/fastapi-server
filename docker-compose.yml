version: '3.8'

services:
  fastapi_app:
    build: .
    command: uvicorn main:app --host 0.0.0.0 --port 8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy # db 컨테이너가 health check에 성공할 때까지 기다립니다.
      redis:
        condition: service_healthy
    restart: always

  db:
    image: mysql:8.0
    container_name: mysql_db
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "3306:3306"
    restart: always
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 10 # 재시도 횟수를 늘려서 초기화 시간을 벌어줍니다.
      start_period: 30s # 컨테이너 시작 후 30초 동안은 healthcheck를 무시합니다

  redis:
    image: redis:latest
    container_name: redis_cache
    ports:
      - "6379:6379"
    restart: always
    healthcheck: # Redis 컨테이너의 상태를 체크합니다.
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  mysql_data: